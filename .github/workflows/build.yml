name: Build

on:
  push:
    branches:
      - master
    tags:
      - v*
  pull_request:
    types: [ opened, synchronize, reopened ]

jobs:
  build:
    name: Build
    runs-on: [ windows-latest ]

    steps:
    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Build
      run: |
        msbuild ZHMTools.sln /t:"Restore;Build" /p:Configuration=Release /m

    - name: Copy artifacts
      run: |
        mkdir _dist
        Copy-Item _build/Release/bin/ResourceTool.exe -Destination _dist/
        Copy-Item _build/Release/bin/ResourceTool.pdb -Destination _dist/
        Copy-Item LICENSE -Destination _dist/

    - name: Archive tools
      uses: actions/upload-artifact@v2
      with:
        name: ZHMTools
        path: |
          _dist/*

  create_release:
    name: Create release
    needs: build
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest

    outputs:
      upload_url: ${{ steps.create.outputs.upload_url }}

    steps:
    - name: Create release
      id: create
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }}
        draft: false
        prerelease: startsWith(github.ref, 'refs/tags/v0.')

  upload_release:
    name: Upload release artifacts
    needs: create_release
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest

    strategy:
      matrix:
        artifact: [ ZHMTools ]

    steps:
    - name: Download artifact
      uses: actions/download-artifact@v2
      with:
        name: ${{ matrix.artifact }}
        path: ${{ matrix.artifact }}

    - name: Archive artifact files
      run: |
        cd ${{ matrix.artifact }}
        zip -r ${{ matrix.artifact }}.zip *

    - name: Upload release assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create_release.outputs.upload_url }}
        asset_path: ${{ matrix.artifact }}/${{ matrix.artifact }}.zip
        asset_name: ${{ matrix.artifact }}.zip
        asset_content_type: application/zip